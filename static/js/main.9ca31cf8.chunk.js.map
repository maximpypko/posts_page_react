{"version":3,"sources":["utils/request.js","utils/enums.js","Context.js","posts/components/LikedPostItem.js","albums/components/LikedAlbumItem.js","common/containers/Dropdown.js","common/containers/ButtonLike.js","common/containers/Header.js","common/components/InputServicePanel.js","common/components/Order.js","common/components/NumberOfVisibleElements.js","common/components/PageViewSwitch.js","common/containers/ServicePanel.js","common/components/ButtonLoadMore.js","common/components/PaginationList.js","posts/components/PostItem.js","common/components/WarningIfNoText.js","posts/containers/GridViewWithPictures.js","posts/containers/GridViewWithoutPictures.js","posts/containers/PostPage.js","albums/components/AlbumItem.js","albums/containers/AlbumsPage.js","common/components/ButtonBack.js","posts/components/CommentForm.js","posts/components/Comment.js","common/components/WarningIfNoComment.js","posts/containers/DetailedPost.js","App.js","index.js"],"names":["getRequest","url","a","page","limit","order","fetch","method","headers","response","total","get","json","data","meta","searchRequest","text","amountPosts","currentPage","rangeRequest","then","IdRequest","Context","createContext","LikedPostItem","post","useContext","likedPosts","setLikedPosts","className","title","type","uk-icon","onClick","newLikedPosts","filter","el","id","hendlerClickButton","LikedAlbumItem","album","likedAlbums","setLikedAlbums","newLikedAlbums","Dropdown","uk-dropdown","map","ButtonLike","withRouter","setCurrentPage","linkPost","setLinkPosts","setIdentifier","activePage","setActivePage","uk-navbar","to","InputServicePanel","formValue","timeRequest","setTimeRequest","hendlerChange","fn","ms","timeout","fnCall","apply","arguments","clearTimeout","setTimeout","debounce","e","preventDefault","ref","uk-search-icon","uk-spinner","placeholder","onChange","Order","setOrder","target","value","NumberOfVisibleElements","setAmountPosts","PageViewSwitch","defaultView","otherView","isViewWithPictures","setIsViewWithPictures","isActiveViewWithPictures","ServicePanel","ButtonLoadMore","hiddenElements","setRange","stopPropagation","PaginationList","amountPaginationItems","useState","line","setLine","useEffect","Array","keys","num","uk-margin","href","prev","current","uk-pagination-previous","element","index","Number","isInteger","innerText","jumpOver","length","uk-pagination-next","PostItem","setSelectedPost","body","onLoad","useRef","classButtonHeart","setClassButtonHeart","activeLineClass","find","src","alt","uk-cover","width","height","React","memo","WarningIfNoText","GridViewWithPictures","posts","GridViewWithoutPictures","PostPage","AlbumItem","AlbumsPage","albums","ButtonBack","CommentForm","comments","setComments","formRef","form","email","warningClassName","setWarningClassName","hendlerForm","author","test","String","toLowerCase","validateEmail","newFormVallue","Date","now","reset","action","required","rows","Comment","comment","WarningIfNoComment","DetailedPost","selectedPost","WrapperPostPage","setPosts","setAlbums","setAmountPaginationCount","identifier","setHiddenElements","range","newAmountPaginationItems","Math","ceil","history","createBrowserHistory","App","Provider","path","exact","component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"yOAAMA,EAAU,uCAAG,WAAOC,GAAP,uCAAAC,EAAA,6DAAYC,EAAZ,+BAAmB,EAAGC,EAAtB,+BAA8B,EAAGC,EAAjC,+BAAyC,MAAzC,SAEMC,MAAM,GAAD,OAAIL,EAAJ,kBAAiBE,EAAjB,oBAAiCC,EAAjC,4BAA0DC,GACpF,CACEE,OAAQ,MACRC,QAAS,CACP,OAAU,mBACV,eAAgB,sBAPL,cAEXC,EAFW,OAWXC,EAAQD,EAASD,QAAQG,IAAI,iBAXlB,SAYEF,EAASG,OAZX,cAYXC,EAZW,OAaXC,EAAO,GACTJ,IAAOI,EAAKJ,MAAQA,GAdP,kBAgBV,CACLG,OACAH,UAlBe,4CAAH,sDAsBVK,EAAa,uCAAG,WAAOd,EAAKe,EAAMC,EAAaC,GAA/B,mCAAAhB,EAAA,6DAA4CG,EAA5C,+BAAoD,MAApD,SAEGC,MAAM,GAAD,OAAIL,EAAJ,kBAAiBiB,EAAjB,oBAAwCD,EAAxC,cAAyDD,EAAzD,4BAAiFX,IAFzF,cAEdI,EAFc,OAGdC,EAAQD,EAASD,QAAQG,IAAI,iBAHf,SAIDF,EAASG,OAJR,cAIdC,EAJc,OAKdC,EAAO,GACTJ,IAAOI,EAAKJ,MAAQA,GANJ,kBAQb,CACLG,OACAH,UAVkB,4CAAH,4DAcbS,EAAY,uCAAG,WAAOlB,GAAP,mCAAAC,EAAA,yDAAYc,EAAZ,+BAAmB,GAAIC,EAAvB,uBAAoCC,EAApC,uBAAiDb,EAAjD,+BAAyD,OAExEa,IAAeD,EAFA,iCAGMX,MAAM,GAAD,OAAIL,EAAJ,kBAAiBiB,EAAjB,mBAAuCD,EAAvC,cAAwDD,EAAxD,4BAAgFX,IACzGe,MAAK,SAAAX,GAAQ,OAAIA,EAASG,UAJZ,cAGXH,EAHW,iBAMJA,EANI,qFAAH,sDCpCXY,EACK,iBADLA,EAEK,iBAFLA,EAGa,2BAGdpB,EACQ,6CADRA,EAEQ,8CCJCqB,EAFCC,0B,OCuCDC,MArCf,YAAkC,IAATC,EAAQ,EAARA,KAErB,EAIIC,qBAAWJ,GAHXK,EADJ,EACIA,WACAC,EAFJ,EAEIA,cAUJ,OACI,+BACI,oBAAIC,UAAU,gCAAd,SAA+CJ,EAAKK,QACpD,oBAAID,UAAU,gBAAd,SACI,wBACIA,UAAU,6BACVE,KAAK,SACLC,UAAQ,eACRC,QAAS,YAdE,WACvB,IAAMC,EAAgBP,EAAWQ,QAAO,SAAAC,GAAE,OAAIA,EAAGC,KAAOZ,EAAKY,MAC7DT,EAAcM,GAaEI,YCWTC,MAlCf,YAAoC,IAAVC,EAAS,EAATA,MAEtB,EAGId,qBAAWJ,GAFXmB,EADJ,EACIA,YACAC,EAFJ,EAEIA,eAQJ,OACI,+BACI,oBAAIb,UAAU,gCAAd,SAA+CW,EAAMV,QACrD,oBAAID,UAAU,gBAAd,SACI,wBACIA,UAAU,6BACVE,KAAK,SACLC,UAAQ,eACRC,QAAS,YAbE,WACvB,IAAMU,EAAiBF,EAAYN,QAAO,SAAAC,GAAE,OAAIA,EAAGC,KAAOG,EAAMH,MAChEK,EAAeC,GAYCL,YCiDTM,MApEf,WAEE,MAGIlB,qBAAWJ,GAFbK,EADF,EACEA,WACAc,EAFF,EAEEA,YAGF,OACE,sBACEZ,UAAU,sBACVgB,cAAY,cAFd,UAGE,qBAAKhB,UAAU,iBAAf,SACE,8BACE,wBAAOA,UAAU,6CAAjB,UACE,gCACE,+BACE,6CACA,oBAAIA,UAAU,gBAAd,yBAGJ,gCAEIF,EAAWmB,KAAI,SAACrB,GACd,OACE,cAAC,EAAD,CAEEA,KAAMA,GADDA,EAAKY,gBAU1B,qBAAKR,UAAU,iBAAf,SACE,8BACE,wBAAOA,UAAU,6CAAjB,UACE,gCACE,+BACE,8CACA,oBAAIA,UAAU,gBAAd,yBAGJ,gCAEIY,EAAYK,KAAI,SAACN,GACf,OACE,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMH,oBCrClBU,MAhBf,WAEI,OACE,qBAAKlB,UAAU,kBAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,wBACEA,UAAU,cACVE,KAAK,SACLC,UAAQ,0BAEV,cAAC,EAAD,UC6CKgB,mBAjDf,WAEE,MAOItB,qBAAWJ,GANb2B,EADF,EACEA,eACAC,EAFF,EAEEA,SACAC,EAHF,EAGEA,aACAC,EAJF,EAIEA,cACAC,EALF,EAKEA,WACAC,EANF,EAMEA,cAGF,OACE,sBAAKzB,UAAU,gCAAgC0B,YAAU,OAAzD,UACE,qBAAK1B,UAAU,iBAAf,SACE,qBAAIA,UAAU,gBAAd,UACE,oBAAIA,UAAWwB,IAAepD,EAAe,YAAc,GAA3D,SACE,cAAC,IAAD,CAAMuD,GAAG,IACPvB,QAAS,WACPmB,EAAc/B,GACd8B,GAAcD,GACdD,EAAe,GACfK,EAAcrD,IALlB,qBASF,oBAAI4B,UAAawB,IAAepD,EAAgB,YAAc,GAA9D,SACE,cAAC,IAAD,CAAMuD,GAAG,UACPvB,QAAS,WACPqB,EAAcrD,IAFlB,2BASN,cAAC,EAAD,UCiBSwD,EAvDW,WAExB,MAKI/B,qBAAWJ,GAJboC,EADF,EACEA,UACAC,EAFF,EAEEA,YACAC,EAHF,EAGEA,eACAR,EAJF,EAIEA,cAkBF,IAAMS,EAfW,SAACC,EAAIC,GACpB,IAAIC,EACJ,OAAO,WAAa,IAAD,mBACXC,EAAS,WAAQH,EAAGI,MAAM,EAAMC,IACtCC,aAAaJ,GACbA,EAAUK,WAAWJ,EAAQF,IAUXO,EANtB,SAAkBC,GAChBA,EAAEC,iBACFpB,EAAc/B,GACduC,GAAe,KAGwB,KAEzC,OACE,uBACEa,IAAKf,EACL7B,UAAU,+EAFZ,UAGI,sBAAM6C,iBAAe,UACnBf,GAAe,sBACf9B,UAAU,qCACV8C,aAAW,eAEf,uBAEE9C,UAAU,kBACVE,KAAK,SACL6C,YAAY,YACZC,SAAU,SAAAN,GACRV,EAAcU,UCrBTO,MArBf,WAEE,IAAQC,EAAarD,qBAAWJ,GAAxByD,SAER,OACE,yBACElD,UAAS,+CACTgD,SAAU,SAACN,GACTQ,EAASR,EAAES,OAAOC,QAHtB,UAME,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,OAAd,sBCcSC,MA1Bf,WAEE,MAGIxD,qBAAWJ,GAFb6D,EADF,EACEA,eACAlC,EAFF,EAEEA,eAGF,OACE,yBACEpB,UAAU,2CACVgD,SAAU,SAACN,GACTY,EAAeZ,EAAES,OAAOC,OACxBhC,EAAe,IAJnB,UAME,wBAAQgC,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,oBCoBSG,MAnCf,WAEE,IAMIC,EAAaC,EANjB,EAII5D,qBAAWJ,GAHb+B,EADF,EACEA,WACAkC,EAFF,EAEEA,mBACAC,EAHF,EAGEA,sBAIFD,EAAqBF,EAAc,YAAcC,EAAY,YAE7D,IAAMG,EAA2BpC,IAAepD,EAAgB,eAAiB,GAEjF,OACE,sBAAK4B,UAAS,yCAAoC4D,GAAlD,UACE,wBACE5D,UAAS,sCAAiCwD,GAC1CpD,QAAS,kBAAMuD,GAAsB,IAFvC,SAGE,sBAAMxD,UAAQ,kBAEhB,wBACEH,UAAS,sCAAiCyD,GAC1CrD,QAAS,kBAAMuD,GAAsB,IAFvC,SAGE,sBAAMxD,UAAQ,sBCPP0D,EAhBM,WAEnB,OACE,qBAAK7D,UAAU,aAAf,SACE,qBAAKA,UAAU,eAAf,SACE,sBAAKA,UAAU,kCAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,YCiCK8D,MA1Cf,WACE,MAQIjE,qBAAWJ,GAPb2B,EADF,EACEA,eACA/B,EAFF,EAEEA,YACA0E,EAHF,EAGEA,eACAjC,EAJF,EAIEA,YACAC,EALF,EAKEA,eACAiC,EANF,EAMEA,SACAzC,EAPF,EAOEA,cAGF,OACE,mCACGwC,GAAmB,qBAAK/D,UAAU,YAAf,SAClB,yBAAQA,UAAU,kEAChBI,QAAS,SAACsC,GACRA,EAAEuB,kBACFvB,EAAEC,iBACFpB,EAAc/B,GACd4B,EAAe/B,EAAc,GAC7B2E,GAAS,GACTjC,GAAe,IAPnB,uBAWMD,GAAe,qBAAK9B,UAAU,uBAAuB8C,aAAW,uBCqE/DoB,EA7FQ,WAErB,MAOIrE,qBAAWJ,GANb0E,EADF,EACEA,sBACA9E,EAFF,EAEEA,YACA+B,EAHF,EAGEA,eACA2C,EAJF,EAIEA,eACAxC,EALF,EAKEA,cACAM,EANF,EAMEA,UAGF,EAAwBuC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEAC,qBAAU,WAERD,GAAQ,WACN,OAAIH,GAAyB,EACpB,YAAIK,MAAML,GAAuBM,QAAQxD,KAAI,SAAAyD,GAAG,OAAIA,EAAM,KAE/DrF,GAAe,GAAKA,GAAe,EAC9B,CAAC,EAAG,EAAG,EAAG,EAAG,MAAO8E,GAEzB9E,GAAe,GAAKA,EAAc8E,EAAwB,EACrD,CAAC,EAAG,MAAO9E,EAAc,EAAGA,EAAaA,EAAc,EAAG,MAAO8E,GAEtE9E,GAAe8E,EAAwB,EAClC,CAAC,EAAG,MAAOA,EAAwB,EAAGA,EAAwB,EAAGA,EAAwB,EAAGA,QADrG,OAID,CAAC9E,EAAa8E,IAWjB,OACE,mCACGJ,GAAkB,qBAAI/D,UAAU,8CAA8C2E,YAAU,OAAtE,UAEA,IAAhBtF,GAAqB,6BACpB,mBAAGuF,KAAK,IAAIxE,QAAS,SAACsC,GACpBA,EAAEC,iBACFvB,GAAe,SAACyD,GAAD,OAAmB,IAATA,EAAaA,EAAOA,EAAO,KACpDtD,EAAcM,EAAUiD,QAAQ1B,MAAQ5D,EAAmBA,IAH7D,SAKE,sBAAMuF,yBAAuB,aAIhCV,EAAKpD,KAAI,SAAC+D,EAASC,GAClB,OACE,oBAAgBjF,UAAWX,IAAgB2F,EAAU,YAAc,GAAnE,SACE,mBAAGJ,KAAMI,EAAS5E,QAAS,SAACsC,GAC1BA,EAAEC,iBACEuC,OAAOC,WAAWzC,EAAES,OAAOiC,YAC7BhE,EAAe4D,GACfzD,EAAcM,EAAUiD,QAAQ1B,MAAQ5D,EAAmBA,IA9B1D,SAACyF,GACF,IAAVA,GACF7D,EAAe/B,EAAc,GAE3B4F,EAAQ,GACV7D,EAAe/B,EAAc,GA2BjBgG,CAASJ,IANb,SAQID,KATGC,MAcZ5F,IAAgB8E,GAAyB,6BACxC,mBAAGS,KAAK,IAAIxE,QAAS,SAACsC,GACpBA,EAAEC,iBACFvB,GAAe,SAACyD,GAAD,OAAUA,IAASxF,EAAYiG,OAAST,EAAOA,EAAO,KACrEtD,EAAcM,EAAUiD,QAAQ1B,MAAQ5D,EAAmBA,IAH7D,SAKE,sBAAM+F,qBAAmB,mBC7ErC,SAASC,EAAT,GAA8B,IAAXR,EAAU,EAAVA,QAEjB,EAMInF,qBAAWJ,GALbgG,EADF,EACEA,gBACA1D,EAFF,EAEEA,eACAjC,EAHF,EAGEA,WACAC,EAJF,EAIEA,cACA2D,EALF,EAKEA,mBAGMlD,EAAoBwE,EAApBxE,GAAIkF,EAAgBV,EAAhBU,KAAMzF,EAAU+E,EAAV/E,MACZ0F,EAASC,mBACf,EAAgDxB,mBAAS,IAAzD,mBAAOyB,EAAP,KAAyBC,EAAzB,KAEMC,EAAmBrC,EAAqB,GAAK,qBAyBnD,OATAa,qBAAU,WACRuB,GAAoB,kBAAMhG,EAAWkG,MAAK,SAAApG,GAAI,OAAIA,EAAKY,KAAOA,KAAM,kBAAoB,QAEvF,CAACA,EAAIV,IAERyE,qBAAU,WACLoB,EAAOb,SAAS/C,GAAe,KACjC,CAACA,IAGF,8BACE,sBACEa,IAAK+C,EACL3F,UAAU,iHAFZ,WAGK0D,GAAsB,sBAAK1D,UAAU,wDAAf,UACvB,qBACEiG,IAAI,gCACJC,IAAI,GACJC,WAAS,OACTnG,UAAU,aAEZ,wBAAQoG,MAAM,MAAMC,OAAO,WAE7B,8BACE,sBAAKrG,UAAU,eAAf,UACE,qBAAIA,UAAS,yIAAoI+F,GAAjJ,UACE,wBACE/F,UAAS,oCAA+B6F,GACxC1F,UAAQ,QACRC,QAAS,WAzCrBL,GAAc,WAGZ,OADkBD,EAAWkG,MAAK,SAAApG,GAAI,OAAIA,EAAKY,KAAOA,KAE9BV,EAAWQ,QAAO,SAAAV,GAAI,OAAIA,EAAKY,KAAOA,KAGtD,CAAGwE,GAAT,mBAAqBlF,UAsCdG,KAEH,mBACED,UAAS,2BAAsB+F,GADjC,SAEGL,IAEH,cAAC,IAAD,CACE/D,GAAE,eAAUnB,GACZR,UAAU,2BACVI,QAAS,WACPqF,EAAgBT,IAJpB,iCAuBGsB,UAAMC,KAAKf,GCjGX,SAASgB,IACpB,OACI,sBAAMxG,UAAU,mCAAhB,4BCgCOyG,MA7Bf,YAA0C,IAAVC,EAAS,EAATA,MAE9B,OACE,qBAAK1G,UAAU,kCAAf,SACE,qBAAKA,UAAU,qDAAf,SAGI0G,EACEA,EAAMzF,KAAI,SAAA+D,GACV,OAAO,cAAC,EAAD,CAELA,QAASA,GADJA,EAAQxE,OAIjB,cAACgG,EAAD,SCaKG,MA3Bf,YAA6C,IAAVD,EAAS,EAATA,MAEjC,OACE,qBAAK1G,UAAU,kCAAf,SACE,qBAAKA,UAAU,oDAAf,SACG0G,EACCA,EAAMzF,KAAI,SAAA+D,GAER,OAAO,cAAC,EAAD,CAELA,QAASA,GADJA,EAAQxE,OAIjB,cAACgG,EAAD,SCkBKI,MA3Bf,WAEE,MAKI/G,qBAAWJ,GAJbiH,EADF,EACEA,MACAvC,EAFF,EAEEA,sBACAT,EAHF,EAGEA,mBACArE,EAJF,EAIEA,YAGF,OACE,uBAAMW,UAAU,UAAhB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IAEE0D,EACA,cAAC,EAAD,CAAsBgD,MAAOA,IAC7B,cAAC,EAAD,CAAyBA,MAAOA,KAG/BA,GACDvC,IAA0B9E,GAC1B,cAAC,EAAD,KAEAqH,GAAS,cAAC,EAAD,QC3BjB,SAASG,EAAT,GAA+B,IAAVlG,EAAS,EAATA,MACXH,EAAcG,EAAdH,GAAIP,EAAUU,EAAVV,MAEZ,EAGIJ,qBAAWJ,GAFbmB,EADF,EACEA,YACAC,EAFF,EAEEA,eAGF,EAAgDuD,mBAAS,IAAzD,mBAAOyB,EAAP,KAAyBC,EAAzB,KAEAvB,qBAAU,WACRuB,GAAoB,kBAAMlF,EAAYoF,MAAK,SAAArF,GAAK,OAAIA,EAAMH,KAAOA,KAAM,kBAAoB,QAE1F,CAACA,EAAII,IAgBR,OACE,8BACE,sBAAKZ,UAAU,2DAAf,UACE,qBAAKiG,IAAI,gCAAgCC,IAAI,GAAGC,WAAS,aACzD,wBAAQC,MAAM,MAAMC,OAAO,QAC3B,qBAAKrG,UAAU,yCACf,qBAAKA,UAAU,mDAAf,SACE,4BAAIC,MAEN,qBAAKD,UAAU,mCAAf,SACE,wBACEA,UAAS,UAAO6F,GAChB1F,UAAQ,wBACRC,QAAS,WAzBjBS,EAAe,GAAD,mBAAKD,GAAL,CAAkBD,KAChCE,GAAe,WAEb,OADaD,EAAYoF,MAAK,SAAArF,GAAK,OAAIA,EAAMH,KAAOA,KAE3BI,EAAYN,QAAO,SAAAK,GAAK,OAAIA,EAAMH,KAAOA,KAG1D,CAAGG,GAAT,mBAAmBC,iBAkCZ0F,UAAMC,KAAKM,GCVXC,MA3Cf,WAEE,MAAuDjH,qBAAWJ,GAA1DsH,EAAR,EAAQA,OAAQ5C,EAAhB,EAAgBA,sBAAuB9E,EAAvC,EAAuCA,YAEvC,OACE,mCACE,uBAAMW,UAAU,UAAhB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,qBAAKA,UAAU,aAAf,SACE,qBAAKA,UAAU,kCAAf,SACE,qBAAKA,UAAU,oDAAf,SAEI+G,EACAA,EAAO9F,KAAI,SAAA+D,GACT,OAAO,cAAC,EAAD,CAELrE,MAAOqE,GADFA,EAAQxE,OAIf,cAACgG,EAAD,WAKRO,GACI5C,IAA0B9E,GAC1B,cAAC,EAAD,KAEA0H,GACA,cAAC,EAAD,UCtCC,SAASC,IAEtB,OACE,cAAC,IAAD,CAAMrF,GAAG,IAAI3B,UAAU,gDAAvB,kBCwFWiH,MA3Ff,YAAiD,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YAEzBC,EAAUxB,mBAKhB,EAA+CxB,mBAJ7B,CAChBiD,KAAM,eACNC,MAAO,iBAET,mBAAOC,EAAP,KAAyBC,EAAzB,KAEMC,EAAc,WAElB,kBAAiCL,EAAQtC,QAAzC,GAAS4C,EAAT,KAAiBJ,EAAjB,KAAwB5B,EAAxB,KAKA,GAqBF,SAAuB4B,GAErB,MADe,wIACDK,KAAKC,OAAON,GAAOO,eAzBNC,CAAcR,EAAMlE,OAM7C,GAAIsE,EAAOtE,OAASsC,EAAKtC,MAAO,CAC9BoE,EAAoB,CAACH,KAAK,eAAgBC,MAAO,iBAC/C,IAAMS,EAAgB,CACpBvH,GAAIwH,KAAKC,MACTP,OAAQA,EAAOtE,MACfkE,MAAOA,EAAMlE,MACbsC,KAAKA,EAAKtC,OAEZ+D,EAAY,CAACY,GAAF,mBAAoBb,KACjCE,EAAQtC,QAAQoD,aAGhBV,EAAoB,CAACH,KAAK,GAAIC,MAAO,sBAfvCE,EAAoB,CAAEH,KAAM,eAAgBC,MAAO,MAyBvD,OACE,sBACE1E,IAAKwE,EACLe,OAAO,IACPnI,UAAU,uCAHZ,SAKC,2BAAUA,UAAU,cAApB,UACG,wBAAQA,UAAU,YAAlB,yBACA,qBAAKA,UAAU,YAAf,SACE,uBACEA,UAAU,WACVE,KAAK,OACL6C,YAAY,OACZqF,UAAQ,MAGZ,sBAAKpI,UAAU,YAAf,UACE,uBACEA,UAAU,WACVE,KAAK,QACL6C,YAAY,QACZqF,UAAQ,IAEV,mBAAGpI,UAAS,yBAAoBuH,EAAiBD,OAAjD,uCAEF,qBAAKtH,UAAU,YAAf,SACE,0BACEA,UAAU,cACVqI,KAAK,IACLtF,YAAY,UACZqF,UAAQ,MAGZ,mBAAGpI,UAAS,yBAAoBuH,EAAiBF,MAAjD,4EACA,qBAAKrH,UAAU,YAAf,SACE,wBACEA,UAAU,8BACVE,KAAK,SACLE,QAAS,SAACsC,GACRA,EAAEC,iBACF8E,KALJ,kCC1DKa,MArBf,YAA6B,IAAXC,EAAU,EAAVA,QACRb,EAAwBa,EAAxBb,OAAQJ,EAAgBiB,EAAhBjB,MAAO5B,EAAS6C,EAAT7C,KAEvB,OACE,0BAAS1F,UAAU,aAAnB,UACE,wBAAQA,UAAU,0DAAlB,SACE,sBAAKA,UAAU,kBAAf,UACE,oBAAIA,UAAU,oCAAd,SACE,mBAAGA,UAAU,gBAAgB4E,KAAK,IAAlC,SAAuC8C,MAEzC,oBAAI1H,UAAU,mEAAd,SACE,6BAAI,mBAAG4E,KAAK,IAAR,SAAa0C,aAIvB,qBAAKtH,UAAU,kBAAf,SACE,4BAAI0F,UChBG,SAAS8C,IACtB,OACE,sBAAMxI,UAAU,mCAAhB,sDCqDWyI,MA9Cf,WAEE,IAAQC,EAAiB7I,qBAAWJ,GAA5BiJ,aACR,EAAgCtE,mBAAS,IAAzC,mBAAO8C,EAAP,KAAiBC,EAAjB,KAEA,OACE,qCACE,cAAC,EAAD,IACA,cAACH,EAAD,IACA,qBAAKhH,UAAU,aAAf,SACE,sBAAKA,UAAU,eAAf,UACE,qBAAIA,UAAU,4CAAd,UACA,+BAAO0I,EAAazI,QAClB,mBAAGD,UAAU,gBAAgB4E,KAAK,IAAlC,uBAEF,qBAAK5E,UAAU,+CAAf,SACA,4BAAK0I,EAAahD,SAEpB,uBACA,oBAAI1F,UAAU,uBAAd,uBACE,qBAAKA,UAAU,cAAf,SAEIkH,EAAS5B,OAAS,EAClB4B,EAASjG,KAAI,SAAAsH,GACX,OACE,cAAC,EAAD,CAEEA,QAASA,GADJA,EAAQ/H,OAInB,cAACgI,EAAD,MAGJ,cAAC,EAAD,CACEtB,SAAUA,EACVC,YAAaA,aClCzB,SAASwB,IACP,MAAoCvE,mBAAShG,GAA7C,mBAAOoD,EAAP,KAAmBC,EAAnB,KACA,EAA0B2C,mBAAS,IAAnC,mBAAOsC,EAAP,KAAckC,EAAd,KACA,EAA4BxE,mBAAS,IAArC,mBAAO2C,EAAP,KAAe8B,EAAf,KACA,EAAsCzE,mBAAS,GAA/C,mBAAOhF,EAAP,KAAoBkE,EAApB,KACA,EAA0Dc,mBAAS,MAAnE,mBAAOD,EAAP,KAA8B2E,EAA9B,KACA,EAA0B1E,mBAAS,OAAnC,mBAAO5F,EAAP,KAAc0E,EAAd,KACA,EAAoDkB,oBAAS,GAA7D,mBAAOV,EAAP,KAA2BC,EAA3B,KACA,EAAsCS,mBAAS,GAA/C,mBAAO/E,EAAP,KAAoB+B,EAApB,KACA,EAAiCgD,oBAAS,GAA1C,mBAAO/C,EAAP,KAAiBC,EAAjB,KACA,EAAoC8C,mBAAS5E,GAA7C,mBAAOuJ,EAAP,KAAmBxH,EAAnB,KACA,EAAoC6C,mBAAS,IAA7C,mBAAOtE,EAAP,KAAmBC,EAAnB,KACA,GAAwCqE,mBAAS,IAAjD,qBAAOsE,GAAP,MAAqBjD,GAArB,MACA,GAA4CrB,oBAAS,GAArD,qBAAOL,GAAP,MAAuBiF,GAAvB,MACA,GAAsC5E,oBAAS,GAA/C,qBAAOtC,GAAP,MAAoBC,GAApB,MACA,GAA0BqC,oBAAS,GAAnC,qBAAO6E,GAAP,MAAcjF,GAAd,MACA,GAAsCI,mBAAS,IAA/C,qBAAOxD,GAAP,MAAoBC,GAApB,MACMgB,GAAY+D,mBAoDlB,OAlDArB,qBAAU,WACJwE,IAAevJ,GAEjBrB,EAAWqD,EAAYnC,EAAaD,EAAaZ,GAC9Ce,MAAK,SAAAX,GACAiD,GAAUiD,SAASjD,GAAUiD,QAAQoD,QACzCc,IAAkB,GAClBxH,IAAepD,EAAewK,EAAShK,EAASI,MAAQ6J,EAAUjK,EAASI,MAC3E,IAAMkK,EAA2BC,KAAKC,KAAKxK,EAASC,MAAQO,GAC5D0J,EAAyBI,QAG9B,CAAC9J,EAAaZ,EAAOa,EAAa0J,EAAY1H,EAAUG,IAE3D+C,qBAAU,WACJwE,IAAevJ,GAEjBN,EAAcsC,EAAYK,GAAUiD,QAAQ,GAAG1B,MAAOhE,EAAaC,EAAab,GAC7Ee,MAAK,SAAAX,GAEJ,GAAIA,IAC2B,IAAzBA,EAASI,KAAKsG,SAChB9D,IAAepD,EAAewK,GAAS,GAASC,GAAU,GAC1D9G,IAAe,IAEbnD,EAASI,KAAKsG,OAAS,GAAG,CAC5B0D,IAAkB,GAClBjH,IAAe,GACfP,IAAepD,EAAewK,EAAShK,EAASI,MAAQ6J,EAAUjK,EAASI,MAC3E,IAAMkK,EAA2BC,KAAKC,KAAKxK,EAASC,MAAQO,GAC5D0J,EAAyBI,SAIlC,CAAC/E,EAAuB/E,EAAaC,EAAab,EAAOuK,EAAYjH,GAAaN,IAErF+C,qBAAU,WACJwE,IAAevJ,GAA4ByJ,KAC7CjF,IAAS,GACT1E,EAAakC,EAAYK,GAAUiD,QAAQ,GAAG1B,MAAOhE,EAAaC,EAAab,GAC5Ee,MAAK,SAAAX,GACJ2C,EAAc,IACdQ,IAAe,GACfP,IAAepD,EACbwK,EAAS,GAAD,mBAAKlC,GAAL,YAAe9H,KACvBiK,EAAU,GAAD,mBAAK9B,GAAL,YAAgBnI,WAGhC,CAACQ,EAAaC,EAAab,EAAOuK,EAAYrC,EAAOuC,GAAOzH,EAAYuF,IAGzE,CACEL,QACAkC,WACA7B,SACA8B,YACAzJ,cACAkE,iBACAa,wBACA2E,2BACAtK,QACA0E,WACAQ,qBACAC,wBACAtE,cACA+B,iBACAC,WACAC,eACAyH,aACAxH,gBACAzB,aACAC,gBACA2I,gBACAjD,mBACA1B,kBACAiF,qBACAlH,eACAC,kBACAkH,SACAjF,YACAxC,aACAC,gBACAb,eACAC,kBACAgB,cAKN,IAAMwH,EAAUC,cAED,SAASC,IAEtB,OACE,cAAC,EAAQC,SAAT,CAAkBpG,MAAOuF,IAAzB,SACE,cAAC,IAAD,CAAQU,QAASA,EAAjB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEI,KAAK,IACLC,OAAK,EACLC,UAAW/C,IAEb,cAAC,IAAD,CACE6C,KAAK,UACLE,UAAW7C,IAEb,cAAC,IAAD,CACE2C,KAAK,YACLE,UAAWlB,a,UCpInBmB,GAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,aAAD,UACE,cAACT,EAAD,QAGJK,M","file":"static/js/main.9ca31cf8.chunk.js","sourcesContent":["const getRequest = async (url, page = 1, limit = 6, order = 'asc') => {\r\n\r\n  const response = await fetch(`${url}?_page=${page}&_limit=${+limit}&_sort=id&_order=${order}`,\r\n    {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n  );\r\n  const total = response.headers.get('X-Total-Count');\r\n  const data = await response.json();\r\n  const meta = {};\r\n  if (total) meta.total = total;\r\n  \r\n  return {\r\n    data,\r\n    total\r\n  }\r\n}\r\n\r\nconst searchRequest = async (url, text, amountPosts, currentPage, order = 'asc') => {\r\n\r\n  const response = await fetch(`${url}?_page=${currentPage}&_limit=${+amountPosts}&q=${text}&_sort=id&_order=${order}`);\r\n  const total = response.headers.get('X-Total-Count');\r\n  const data = await response.json();\r\n  const meta = {};\r\n  if (total) meta.total = total;\r\n\r\n  return {\r\n    data,\r\n    total\r\n  }\r\n}\r\n\r\nconst rangeRequest = async (url, text = '', amountPosts, currentPage, order = 'asc') => {\r\n\r\n  if (currentPage && amountPosts) {\r\n    const response = await fetch(`${url}?_page=${currentPage}&_limit=${amountPosts}&q=${text}&_sort=id&_order=${order}`)\r\n      .then(response => response.json())\r\n    \r\n    return await response;\r\n  }\r\n}\r\n\r\nexport { getRequest, searchRequest, rangeRequest };"," const IdRequest = {\r\n    normal: 'normal request',\r\n    search: 'search request',\r\n    buttonLoadMore: 'button Load More request'\r\n}\r\n\r\nconst url = {\r\n    urlPosts: \"https://jsonplaceholder.typicode.com/posts\",\r\n    urlAlbums:\"https://jsonplaceholder.typicode.com/albums\"\r\n}\r\nexport {IdRequest, url};","import { createContext } from 'react';\r\n\r\nconst Context = createContext()\r\n\r\nexport default Context ;","import PropTypes from 'prop-types';\r\nimport Context  from '../../Context';\r\nimport { useContext } from 'react';\r\n\r\nfunction LikedPostItem({ post }) {\r\n    \r\n    const {\r\n        likedPosts,\r\n        setLikedPosts,\r\n        // setIdElementDeleted\r\n    } = useContext(Context);\r\n    \r\n    const hendlerClickButton = () => {\r\n        const newLikedPosts = likedPosts.filter(el => el.id !== post.id);\r\n        setLikedPosts(newLikedPosts);\r\n        // setIdElementDeleted(post.id);\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <td className=\"uk-width-medium uk-text-small\">{post.title}</td>\r\n            <td className=\"uk-text-right\">\r\n                <button\r\n                    className=\"uk-button uk-button--close\"\r\n                    type=\"button\"\r\n                    uk-icon=\"icon: close;\"\r\n                    onClick={() => {\r\n                        hendlerClickButton()\r\n                    }}\r\n                ></button>\r\n            </td>\r\n      </tr>\r\n    );\r\n}\r\n  \r\nLikedPostItem.propTypes = {\r\n    post: PropTypes.object,\r\n    likedPosts: PropTypes.array,\r\n    setLikedPosts: PropTypes.func\r\n}\r\n  \r\nexport default LikedPostItem;","import PropTypes from 'prop-types';\r\nimport Context  from '../../Context';\r\nimport { useContext } from 'react';\r\n\r\nfunction LikedAlbumItem({ album }) {\r\n    \r\n    const {\r\n        likedAlbums,\r\n        setLikedAlbums\r\n    } = useContext(Context);\r\n    \r\n    const hendlerClickButton = () => {\r\n        const newLikedAlbums = likedAlbums.filter(el => el.id !== album.id)\r\n        setLikedAlbums(newLikedAlbums)\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <td className=\"uk-width-medium uk-text-small\">{album.title}</td>\r\n            <td className=\"uk-text-right\">\r\n                <button\r\n                    className=\"uk-button uk-button--close\"\r\n                    type=\"button\"\r\n                    uk-icon=\"icon: close;\"\r\n                    onClick={() => {\r\n                        hendlerClickButton()\r\n                    }}\r\n                ></button>\r\n            </td>\r\n      </tr>\r\n    );\r\n}\r\n  \r\nLikedAlbumItem.propTypes = {\r\n    likedAlbums: PropTypes.array,\r\n    setLikedAlbums: PropTypes.func\r\n}\r\n\r\nexport default LikedAlbumItem;","import PropTypes from 'prop-types';\r\nimport { useContext } from 'react';\r\nimport Context from '../../Context';\r\nimport LikedPostItem from '../../posts/components/LikedPostItem';\r\nimport LikedAlbumItem from '../../albums/components/LikedAlbumItem';\r\n\r\nfunction Dropdown() {\r\n\r\n  const {\r\n    likedPosts,\r\n    likedAlbums\r\n  } = useContext(Context);\r\n\r\n  return (\r\n    <div\r\n      className=\"dropdown__container\" \r\n      uk-dropdown='mode: click'>\r\n      <div className=\"dropdown__item\">\r\n        <div>\r\n          <table className=\"uk-table uk-table-divider uk-table-justify\">\r\n            <thead>\r\n              <tr>\r\n                <th>Posts title</th>\r\n                <th className=\"uk-text-right\">Delete</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                likedPosts.map((post) => {\r\n                  return (\r\n                    <LikedPostItem\r\n                      key={post.id}\r\n                      post={post}\r\n                    />\r\n                  )\r\n                })\r\n              }\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div className=\"dropdown__item\">\r\n        <div>\r\n          <table className=\"uk-table uk-table-divider uk-table-justify\">\r\n            <thead>\r\n              <tr>\r\n                <th>Albums title</th>\r\n                <th className=\"uk-text-right\">Delete</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                likedAlbums.map((album) => {\r\n                  return (\r\n                    <LikedAlbumItem\r\n                      key={album.id}\r\n                      album={album}\r\n                    />\r\n                  )\r\n                })\r\n              }\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>   \r\n  );\r\n}\r\n\r\nDropdown.propTypes = {\r\n  likedPosts: PropTypes.array,\r\n  likedAlbums: PropTypes.array\r\n}\r\n\r\nexport default Dropdown;","import Dropdown from \"./Dropdown\";\r\n\r\nfunction ButtonLike () {\r\n\r\n    return (\r\n      <div className=\"uk-navbar-right\">\r\n        <div className=\"uk-navbar-item\">\r\n          <button\r\n            className=\"uk-button z\"\r\n            type=\"button\"\r\n            uk-icon=\"icon: heart; ratio: 2\"\r\n          ></button>\r\n          <Dropdown/>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ButtonLike;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { useContext } from 'react';\r\nimport Context  from '../../Context';\r\nimport ButtonLike from './ButtonLike';\r\nimport { IdRequest, url } from '../../utils/enums';\r\n\r\nfunction Header() {\r\n  \r\n  const {\r\n    setCurrentPage,\r\n    linkPost,\r\n    setLinkPosts,\r\n    setIdentifier,\r\n    activePage,\r\n    setActivePage\r\n  } = useContext(Context)\r\n\r\n  return (\r\n    <nav className=\"uk-navbar uk-navbar-container\" uk-navbar='true'>\r\n      <div className=\"uk-navbar-left\">\r\n        <ul className=\"uk-navbar-nav\">\r\n          <li className={activePage === url.urlPosts ? 'uk-active' : ''}>\r\n            <Link to='/'\r\n              onClick={() => {\r\n                setIdentifier(IdRequest.normal);\r\n                setLinkPosts(!linkPost);\r\n                setCurrentPage(1);\r\n                setActivePage(url.urlPosts)\r\n              }}>Posts\r\n            </Link>\r\n          </li>\r\n          <li className = {activePage === url.urlAlbums ? 'uk-active' : ''}>\r\n            <Link to=\"/albums\"\r\n              onClick={() => {\r\n                setActivePage(url.urlAlbums)\r\n              }}>\r\n              Albums\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <ButtonLike/>\r\n    </nav>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  setCurrentPage: PropTypes.func,\r\n  linkPost:PropTypes.bool,\r\n  setLinkPosts:PropTypes.func,\r\n  setIdentifier: PropTypes.func,\r\n  activePage: PropTypes.string,\r\n  setActivePage: PropTypes.func\r\n}\r\n\r\nexport default withRouter(Header);","import { useContext } from 'react';\r\nimport { IdRequest } from '../../utils/enums';\r\nimport PropTypes from 'prop-types';\r\nimport  Context  from '../../Context';\r\n\r\nconst InputServicePanel = () => {\r\n  \r\n  const {\r\n    formValue,\r\n    timeRequest,\r\n    setTimeRequest,\r\n    setIdentifier\r\n  } = useContext(Context);\r\n\r\n  const debounce = (fn, ms) => {\r\n    let timeout;\r\n    return function () {\r\n      const fnCall = () => { fn.apply(this, arguments) }\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(fnCall, ms)\r\n    };\r\n  }\r\n\r\n  function onChange(e) {\r\n    e.preventDefault();\r\n    setIdentifier(IdRequest.search);\r\n    setTimeRequest(true);\r\n  } \r\n\r\n  const hendlerChange = debounce(onChange, 1000);\r\n  \r\n  return (\r\n    <form\r\n      ref={formValue}\r\n      className=\"uk-search uk-search-default uk-width-medium uk-margin-remove uk-margin-right\">\r\n        <span uk-search-icon='true'></span>\r\n        {!timeRequest || <span\r\n          className=\"uk-search-icon uk-search-icon-flip\"\r\n          uk-spinner=\"ratio: 0.6\"\r\n        ></span>}\r\n      <input\r\n        \r\n        className=\"uk-search-input\"\r\n        type=\"search\"\r\n        placeholder=\"Search...\"\r\n        onChange={e => {\r\n          hendlerChange(e)\r\n        }}\r\n      />\r\n    </form>      \r\n  );\r\n}\r\n\r\nInputServicePanel.propTypes = {\r\n  setInputValue: PropTypes.func,\r\n  timeRequest: PropTypes.bool,\r\n  setTimeRequest: PropTypes.func,\r\n  setIdentifier: PropTypes.func\r\n}\r\n\r\nexport default InputServicePanel;","import PropTypes from 'prop-types';\r\nimport  Context  from '../../Context';\r\nimport { useContext } from 'react';\r\n\r\nfunction Order() {\r\n  \r\n  const { setOrder } = useContext(Context);\r\n\r\n  return (\r\n    <select\r\n      className={`uk-select uk-width-small uk-margin-auto-left`}\r\n      onChange={(e) => {\r\n        setOrder(e.target.value);\r\n      }\r\n      }>\r\n      <option value=\"asc\">ASC</option>\r\n      <option value=\"desc\">DESC</option>\r\n    </select>\r\n  );\r\n}\r\n\r\nOrder.propTypes = {\r\n  setOrder: PropTypes.func\r\n}\r\n\r\nexport default Order;","import PropTypes from 'prop-types';\r\nimport  Context  from '../../Context';\r\nimport { useContext } from 'react';\r\n\r\nfunction NumberOfVisibleElements() {\r\n  \r\n  const {\r\n    setAmountPosts,\r\n    setCurrentPage\r\n  } = useContext(Context);\r\n\r\n  return (\r\n    <select\r\n      className=' uk-select uk-width-small uk-margin-left'\r\n      onChange={(e) => {\r\n        setAmountPosts(e.target.value);\r\n        setCurrentPage(1);\r\n      }}>\r\n      <option value=\"6\">6</option>\r\n      <option value=\"12\">12</option>\r\n      <option value=\"24\">24</option>\r\n    </select> \r\n  );\r\n}\r\n\r\nNumberOfVisibleElements.propTypes = {\r\n  setAmountPosts: PropTypes.func,\r\n  setCurrentPage: PropTypes.func\r\n}\r\n\r\nexport default NumberOfVisibleElements;","import PropTypes from 'prop-types';\r\nimport  Context  from '../../Context';\r\nimport { useContext } from 'react';\r\nimport { url }   from '../../utils/enums';\r\n\r\nfunction PageViewSwitch() {\r\n  \r\n  const {\r\n    activePage,\r\n    isViewWithPictures,\r\n    setIsViewWithPictures\r\n  } = useContext(Context);\r\n\r\n  let defaultView, otherView;\r\n  isViewWithPictures ? defaultView = 'uk-active' : otherView = 'uk-active';\r\n\r\n  const isActiveViewWithPictures = activePage === url.urlAlbums ? 'uk-invisible' : '';\r\n\r\n  return (\r\n    <div className={`uk-button-group uk-margin-left ${isActiveViewWithPictures}`}>\r\n      <button\r\n        className={`uk-button uk-button-default ${defaultView}`}\r\n        onClick={() => setIsViewWithPictures(true)}>\r\n        <span uk-icon=\"icon:  grid\"></span>\r\n      </button>\r\n      <button\r\n        className={`uk-button uk-button-default ${otherView}`}\r\n        onClick={() => setIsViewWithPictures(false)}>\r\n        <span uk-icon=\"icon:  list\"></span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nPageViewSwitch.propTypes = {\r\n  activePage: PropTypes.string,\r\n  isViewWithPictures: PropTypes.bool,\r\n  setIsViewWithPictures: PropTypes.func\r\n}\r\n\r\nexport default PageViewSwitch;","import Form from \"../components/InputServicePanel\";\r\nimport Order from \"../components/Order\";\r\nimport NumberOfVisibleElements from \"../components/NumberOfVisibleElements\";\r\nimport PageViewSwitch from \"../components/PageViewSwitch\";\r\n\r\nconst ServicePanel = () => {\r\n\r\n  return (\r\n    <div className=\"uk-section\">\r\n      <div className=\"uk-container\">\r\n        <div className=\"uk-margin-medium-bottom uk-flex\">\r\n          <Form/>\r\n          <Order/>\r\n          <NumberOfVisibleElements/>\r\n          <PageViewSwitch/>\r\n        </div>\r\n      </div>\r\n    </div> \r\n  );\r\n}\r\n\r\nexport default ServicePanel;","import PropTypes from 'prop-types';\r\nimport {IdRequest}  from '../../utils/enums';\r\nimport  Context  from '../../Context';\r\nimport { useContext } from 'react';\r\n\r\nfunction ButtonLoadMore() {\r\n  const {\r\n    setCurrentPage,\r\n    currentPage,\r\n    hiddenElements,\r\n    timeRequest,\r\n    setTimeRequest,\r\n    setRange,\r\n    setIdentifier\r\n  } = useContext(Context)\r\n  \r\n  return (\r\n    <>\r\n      {hiddenElements ||  <div className=\"uk-margin\">\r\n        <button className=\"uk-button uk-button-primary uk-width-1-1 uk-margin-small-bottom\"\r\n          onClick={(e) => {\r\n            e.stopPropagation()\r\n            e.preventDefault()\r\n            setIdentifier(IdRequest.buttonLoadMore)\r\n            setCurrentPage(currentPage + 1)\r\n            setRange(true)\r\n            setTimeRequest(true)\r\n          }}\r\n        >\r\n          Load more\r\n            {!timeRequest || <div className=\"uk-margin-small-left\" uk-spinner=\"ratio: 0.6\"></div>}\r\n        </button>\r\n      </div>}\r\n    </>\r\n  );\r\n}\r\n\r\nButtonLoadMore.propTypes = {\r\n  setCurrentPage: PropTypes.func,\r\n  currentPage: PropTypes.number,\r\n  hiddenElements: PropTypes.bool,\r\n  timeRequest: PropTypes.bool,\r\n  setTimeRequest: PropTypes.func,\r\n  setRange: PropTypes.func,\r\n  setIdentifier: PropTypes.func,\r\n}\r\n\r\nexport default ButtonLoadMore;","import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from \"react\";\r\nimport { IdRequest } from '../../utils/enums';\r\nimport  Context  from '../../Context';\r\nimport { useContext } from 'react';\r\n\r\nconst PaginationList = () => {\r\n  \r\n  const {\r\n    amountPaginationItems,\r\n    currentPage,\r\n    setCurrentPage,\r\n    hiddenElements,\r\n    setIdentifier,\r\n    formValue\r\n  } = useContext(Context)\r\n  \r\n  const [line, setLine] = useState([]);\r\n\r\n  useEffect(() => {\r\n    \r\n    setLine(() => {\r\n      if (amountPaginationItems <= 5) {\r\n        return [...Array(amountPaginationItems).keys()].map(num => num + 1);\r\n      }\r\n      if (currentPage >= 1 && currentPage <= 3) {\r\n        return [1, 2, 3, 4, '...', amountPaginationItems];\r\n      }\r\n      if (currentPage >= 4 && currentPage < amountPaginationItems - 2) {\r\n        return [1, '...', currentPage - 1, currentPage, currentPage + 1, '...', amountPaginationItems];\r\n      }\r\n      if (currentPage >= amountPaginationItems - 2) {\r\n        return [1, '...', amountPaginationItems - 3, amountPaginationItems - 2, amountPaginationItems - 1, amountPaginationItems];\r\n      }\r\n    })\r\n  }, [currentPage, amountPaginationItems]);\r\n\r\n  const jumpOver = (index) => {\r\n    if (index === 1) {\r\n      setCurrentPage(currentPage - 3);\r\n    }\r\n    if (index > 1){\r\n      setCurrentPage(currentPage + 3);\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      {hiddenElements || <ul className=\"uk-pagination uk-flex-center uk-flex-middle\" uk-margin='true'>\r\n\r\n        {currentPage === 1 || <li>\r\n          <a href=\"/\" onClick={(e) => {\r\n            e.preventDefault();\r\n            setCurrentPage((prev) => prev === 1 ? prev : prev - 1);\r\n            setIdentifier(formValue.current.value ? IdRequest.search : IdRequest.normal)\r\n          }}>\r\n            <span uk-pagination-previous='true'></span>\r\n          </a>\r\n        </li>}\r\n\r\n        {line.map((element, index) => {\r\n          return (\r\n            <li key={index} className={currentPage === element ? 'uk-active' : ''}>\r\n              <a href={element} onClick={(e) => {\r\n                e.preventDefault();\r\n                if (Number.isInteger(+e.target.innerText)) {\r\n                  setCurrentPage(element);\r\n                  setIdentifier(formValue.current.value ? IdRequest.search : IdRequest.normal)\r\n                } else {\r\n                  jumpOver(index);\r\n                }\r\n              }}>{element}</a>\r\n            </li>\r\n          )\r\n        })}\r\n\r\n        {currentPage === amountPaginationItems || <li>\r\n          <a href=\"/\" onClick={(e) => {\r\n            e.preventDefault()\r\n            setCurrentPage((prev) => prev === currentPage.length ? prev : prev + 1);\r\n            setIdentifier(formValue.current.value ? IdRequest.search : IdRequest.normal)\r\n          }}>\r\n            <span uk-pagination-next='true'></span>\r\n          </a>\r\n        </li>}\r\n      </ul>}\r\n    </>\r\n  );\r\n}\r\n\r\nPaginationList.propTypes = {\r\n  amountPaginationItems:PropTypes.number,\r\n  currentPage:PropTypes.number,\r\n  setCurrentPage: PropTypes.func,\r\n  hiddenElements: PropTypes.bool,\r\n  setIdentifier: PropTypes.func,\r\n  formValue: PropTypes.object\r\n}\r\n\r\nexport default PaginationList;","import PropTypes from 'prop-types';\r\nimport React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Context  from '../../Context';\r\n\r\nfunction PostItem({element}) {\r\n\r\n  const {\r\n    setSelectedPost,\r\n    setTimeRequest,\r\n    likedPosts,\r\n    setLikedPosts,\r\n    isViewWithPictures\r\n  } = useContext(Context)\r\n\r\n  const { id, body, title } = element;\r\n  const onLoad = useRef();\r\n  const [classButtonHeart, setClassButtonHeart] = useState('');\r\n\r\n  const activeLineClass =  isViewWithPictures ? '' : 'uk-heading-divider';\r\n\r\n  const hendlerClickButtonHeart = () => {\r\n\r\n    setLikedPosts(() => {\r\n\r\n      const likedPost = likedPosts.find(post => post.id === id);\r\n      if (likedPost) {\r\n        const newLikedPosts = likedPosts.filter(post => post.id !== id);\r\n        return newLikedPosts\r\n      }else {\r\n        return  [element, ...likedPosts]\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    setClassButtonHeart(() => likedPosts.find(post => post.id === id) ? 'uk-text-success' : ''\r\n    )\r\n  }, [id, likedPosts])\r\n\r\n  useEffect(() => {\r\n    if(onLoad.current) setTimeRequest(false)\r\n  }, [setTimeRequest])\r\n\r\n  return (\r\n    <div >\r\n      <div\r\n        ref={onLoad}\r\n        className=\"grid uk-card uk-child-width-expand uk-card-default uk-margin-medium-bottom  uk-grid-collapse uk-margin uk-grid\">\r\n        {! isViewWithPictures || <div className=\"uk-card-media-left uk-cover-container uk-first-column\">\r\n          <img\r\n            src=\"https://picsum.photos/600/400\"\r\n            alt=\"\"\r\n            uk-cover='true'\r\n            className=\"uk-cover\"\r\n          />\r\n          <canvas width=\"600\" height=\"400\"></canvas>\r\n        </div>}\r\n        <div>\r\n          <div className=\"uk-card-body\">\r\n            <h3 className={`uk-flex-row-reverse uk-card-title uk-margin-remove-bottom uk-flex uk-flex-middle uk-flex-between uk-height-small uk-text-break ${activeLineClass}`}>\r\n              <button\r\n                className={`uk-width-3-4 uk-icon-link ${classButtonHeart}`}\r\n                uk-icon=\"heart\"\r\n                onClick={() => {\r\n                  hendlerClickButtonHeart()\r\n                }}\r\n                ></button>\r\n              {title}\r\n            </h3>\r\n            <p\r\n              className={`uk-text-truncate ${activeLineClass}`} >\r\n              {body}\r\n            </p>\r\n            <Link \r\n              to={`post/${id}`}\r\n              className=\"uk-button uk-button-text\"\r\n              onClick={() => {\r\n                setSelectedPost(element)\r\n              }}>\r\n              Read more\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nPostItem.propTypes = {\r\n  element: PropTypes.object,\r\n  setTimeRequest: PropTypes.func,\r\n  likedPosts: PropTypes.array,\r\n  setLikedPosts: PropTypes.func,\r\n  isViewWithPictures: PropTypes.bool\r\n}\r\n\r\nexport default React.memo(PostItem);","export default function WarningIfNoText() {\r\n    return (\r\n        <span className=\"uk-text-danger uk-text-uppercase\">Text not found</span>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PostItem from \"../components/PostItem\";\r\nimport WarningIfNoText from \"../../common/components/WarningIfNoText\";\r\n\r\nfunction GridViewWithPictures({ posts }) {\r\n\r\n  return (\r\n    <div className=\"uk-container uk-cover-container\">  \r\n      <div className='uk-grid uk-child-width-1-2@s uk-child-width-1-2@m ' >\r\n      \r\n        {\r\n          posts ?\r\n            posts.map(element => {\r\n            return <PostItem\r\n              key={element.id}\r\n              element={element}\r\n            />\r\n          }) :\r\n          <WarningIfNoText/>\r\n        }\r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nGridViewWithPictures.propTypes = {\r\n  posts: PropTypes.oneOfType([\r\n    PropTypes.array,\r\n    PropTypes.bool\r\n  ])\r\n}\r\n\r\nexport default GridViewWithPictures;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PostItem from \"../components/PostItem\";\r\nimport WarningIfNoText from \"../../common/components/WarningIfNoText\";\r\n\r\nfunction GridViewWithoutPictures({ posts }) {\r\n\r\n  return (\r\n    <div className=\"uk-container uk-cover-container\">  \r\n      <div className='uk-grid uk-child-width-1-2@s uk-child-width-1-3@m'>\r\n        {posts ? \r\n          posts.map(element => {\r\n\r\n            return <PostItem\r\n              key={element.id}\r\n              element={element}\r\n            />\r\n          }) :\r\n          <WarningIfNoText/>\r\n          }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nGridViewWithoutPictures.propTypes = {\r\n  posts: PropTypes.oneOfType([\r\n    PropTypes.array,\r\n    PropTypes.bool\r\n  ])\r\n}\r\n\r\nexport default GridViewWithoutPictures;","import { useContext } from 'react';\nimport Context from '../../Context';\nimport Header from \"../../common/containers/Header\";\nimport ServicePanel from \"../../common/containers/ServicePanel\";\nimport ButtonLoadMore from \"../../common/components/ButtonLoadMore\";\nimport PaginationList from \"../../common/components/PaginationList\";\nimport GridViewWithPictures from './GridViewWithPictures';\nimport GridViewWithoutPictures from './GridViewWithoutPictures';\n\nfunction PostPage() {\n  \n  const {\n    posts,\n    amountPaginationItems,\n    isViewWithPictures,\n    currentPage\n  } = useContext(Context);\n\n  return (\n    <main className=\"uk-main\">\n      <Header/>\n      <ServicePanel />\n      {\n        isViewWithPictures ?\n        <GridViewWithPictures posts={posts}/> :\n        <GridViewWithoutPictures posts={posts}/>\n      }\n      {\n        !posts ||\n        amountPaginationItems === currentPage ||\n        <ButtonLoadMore/>\n      }\n      {!posts || <PaginationList/>}\n    </main>\n  );\n}\nexport default PostPage;","import React, { useState, useEffect, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Context from '../../Context';\r\n\r\n\r\nfunction AlbumItem({ album }) {\r\n  const { id, title } = album;\r\n  \r\n  const {\r\n    likedAlbums,\r\n    setLikedAlbums\r\n  } = useContext(Context);\r\n\r\n  const [classButtonHeart, setClassButtonHeart] = useState('');\r\n  \r\n  useEffect(() => {\r\n    setClassButtonHeart(() => likedAlbums.find(album => album.id === id) ? 'uk-text-success' : ''\r\n    )\r\n  }, [id, likedAlbums])\r\n\r\n  const hendlerClickButtonHeart = () => {\r\n \r\n    setLikedAlbums([...likedAlbums, album])\r\n    setLikedAlbums(() => {\r\n      const flag = likedAlbums.find(album => album.id === id);\r\n      if (flag) {\r\n        const newLikedAlbums = likedAlbums.filter(album => album.id !== id);\r\n        return newLikedAlbums\r\n      }else {\r\n        return  [album, ...likedAlbums]\r\n      }\r\n    })\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <div className=\"uk-card uk-card-default uk-margin-medium-bottom uk-light\">\r\n        <img src=\"https://picsum.photos/600/400\" alt=\"\" uk-cover='uk-cover'/>\r\n        <canvas width=\"600\" height=\"400\"></canvas>\r\n        <div className=\"uk-overlay-primary uk-position-cover\"></div>\r\n        <div className=\"uk-overlay uk-overlay-primary uk-position-bottom\">\r\n          <p>{title}</p>\r\n        </div>         \r\n        <div className=\"uk-position-top-right uk-overlay\">\r\n          <button\r\n            className = {`${classButtonHeart}`}\r\n            uk-icon=\"icon: heart; ratio: 2\"\r\n            onClick={() => {\r\n              hendlerClickButtonHeart()\r\n            }}        \r\n          ></button>\r\n        </div>                        \r\n      </div>                \r\n    </div>\r\n  )\r\n}\r\n\r\nAlbumItem.propTypes = {\r\n  album: PropTypes.object,\r\n  likedAlbums: PropTypes.array,\r\n  setLikedAlbums: PropTypes.func\r\n}\r\n\r\nexport default React.memo(AlbumItem);","import PropTypes from 'prop-types';\r\nimport { useContext } from 'react';\r\nimport Header from '../../common/containers/Header';\r\nimport AlbumItem from '../components/AlbumItem';\r\nimport ButtonLoadMore from '../../common/components/ButtonLoadMore';\r\nimport ServicePanel from '../../common/containers/ServicePanel';\r\nimport PaginationList from \"../../common/components/PaginationList\";\r\nimport Context from '../../Context';\r\nimport WarningIfNoText from '../../common/components/WarningIfNoText';\r\n\r\nfunction AlbumsPage() {\r\n\r\n  const { albums, amountPaginationItems, currentPage } = useContext(Context);\r\n\r\n  return (\r\n    <>\r\n      <main className=\"uk-main\">\r\n        <Header />\r\n        <ServicePanel/>\r\n        <div className=\"uk-section\">\r\n          <div className=\"uk-container uk-cover-container\">  \r\n            <div className=\"uk-grid uk-child-width-1-2@s uk-child-width-1-3@m\">\r\n              {\r\n                albums ? \r\n                albums.map(element => {\r\n                  return <AlbumItem\r\n                    key={element.id}\r\n                    album={element}\r\n                    /> \r\n                }) :\r\n                  <WarningIfNoText/>\r\n              }            \r\n            </div>\r\n          </div>\r\n        </div>\r\n        {!albums ||\r\n              amountPaginationItems === currentPage ||\r\n              <ButtonLoadMore/>\r\n            }\r\n            {!albums ||\r\n              <PaginationList/>\r\n            }\r\n      </main>\r\n    </>\r\n  )\r\n}\r\n\r\nAlbumsPage.propTypes = {\r\n  albums: PropTypes.array,\r\n  amountPaginationItems: PropTypes.number,\r\n  currentPage: PropTypes.number,\r\n}\r\n\r\nexport default AlbumsPage;","import { Link } from \"react-router-dom\";\r\n\r\nexport default function ButtonBack() {\r\n \r\n  return (\r\n    <Link to='/' className=\"uk-button uk-button-default  uk-margin-small \">Back</Link>\r\n  )\r\n}","import { useRef, useState } from 'react';\r\n\r\nfunction CommentForm( {comments, setComments} ) {\r\n  \r\n  const formRef = useRef();\r\n  const сlassName = {\r\n    form: 'uk-invisible',\r\n    email: 'uk-invisible'\r\n  }\r\n  const [warningClassName, setWarningClassName]= useState(сlassName)\r\n  \r\n  const hendlerForm = () => {\r\n   \r\n    const [, author, email, body,] = formRef.current;\r\n    \r\n\r\n    const resValidationEmail = validateEmail(email.value);\r\n\r\n    if (!resValidationEmail) {\r\n      setWarningClassName({ form: 'uk-invisible', email: '' })\r\n      \r\n    } else {\r\n      if (author.value && body.value) {\r\n        setWarningClassName({form:'uk-invisible', email: 'uk-invisible'})\r\n          const newFormVallue = {\r\n            id: Date.now(),\r\n            author: author.value,\r\n            email: email.value,\r\n            body:body.value\r\n          }\r\n          setComments([newFormVallue, ...comments])\r\n        formRef.current.reset()\r\n        \r\n      } else {\r\n        setWarningClassName({form:'', email: 'uk-invisible'})\r\n      }  \r\n    }\r\n  }\r\n\r\n  function validateEmail(email) {\r\n    const result = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n    return result.test(String(email).toLowerCase());\r\n  }\r\n\r\n  return (\r\n    <form\r\n      ref={formRef}\r\n      action=\"#\"\r\n      className=\"uk-comment-form uk-margin-medium-top\"\r\n    >\r\n     <fieldset className=\"uk-fieldset\">\r\n        <legend className=\"uk-legend\">Add Comment</legend>\r\n        <div className=\"uk-margin\">\r\n          <input\r\n            className=\"uk-input\"\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n            required         \r\n          />\r\n        </div>\r\n        <div className=\"uk-margin\">\r\n          <input\r\n            className=\"uk-input\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            required\r\n          />\r\n          <p className={`uk-text-danger ${warningClassName.email}`}> * Enter correct email</p>\r\n        </div>\r\n        <div className=\"uk-margin\">\r\n          <textarea\r\n            className=\"uk-textarea\"\r\n            rows=\"5\"\r\n            placeholder=\"Comment\"\r\n            required\r\n          ></textarea>\r\n        </div>\r\n        <p className={`uk-text-danger ${warningClassName.form}`}> * To successfully create a comment, all fields must be filled</p>\r\n        <div className=\"uk-margin\">\r\n          <button\r\n            className=\"uk-button uk-button-primary\"\r\n            type=\"submit\"\r\n            onClick={(e) => {\r\n              e.preventDefault()\r\n              hendlerForm()\r\n            }\r\n            }\r\n          >Post Comment</button>\r\n        </div>\r\n      </fieldset>\r\n    </form>       \r\n  )\r\n}\r\nexport default CommentForm;","function Comment({comment}) {\r\n  const { author, email, body } = comment;\r\n\r\n  return (\r\n    <article className=\"uk-comment\">\r\n      <header className=\"uk-comment-header uk-grid uk-grid-medium uk-flex-middle\">\r\n        <div className=\"uk-width-expand\">\r\n          <h4 className=\"uk-comment-title uk-margin-remove\">\r\n            <a className=\"uk-link-reset\" href=\"/\">{author}</a>\r\n          </h4>\r\n          <ul className=\"uk-comment-meta uk-subnav uk-subnav-divider uk-margin-remove-top\">\r\n            <li><a href=\"/\">{email}</a></li>\r\n          </ul>\r\n        </div>\r\n      </header>\r\n      <div className=\"uk-comment-body\">\r\n        <p>{body}</p>\r\n      </div>        \r\n    </article>\r\n  )\r\n}\r\nexport default Comment;","export default function WarningIfNoComment() {\r\n  return (\r\n    <span className=\"uk-text-danger uk-text-uppercase\">No comments yet, be the first to comment</span>\r\n  )\r\n}","import { useContext, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Context  from '../../Context';\r\nimport Header from '../../common/containers/Header';\r\nimport ButtonBack from '../../common/components/ButtonBack';\r\nimport CommentForm from '../components/CommentForm';\r\nimport Comment from '../components/Comment';\r\nimport WarningIfNoComment from '../../common/components/WarningIfNoComment';\r\n\r\nfunction DetailedPost() {\r\n\r\n  const { selectedPost } = useContext(Context);\r\n  const [comments, setComments] = useState([]);\r\n  \r\n  return (\r\n    <>\r\n      <Header />\r\n      <ButtonBack />\r\n      <div className=\"uk-section\">\r\n        <div className=\"uk-container\">\r\n          <h1 className=\"uk-heading-bullet uk-margin-medium-bottom\">\r\n          <span>{selectedPost.title}</span>\r\n            <a className=\"uk-text-small\" href=\"/\">Author</a>\r\n          </h1>\r\n          <div className=\"uk-article uk-dropcap uk-margin-large-bottom\">\r\n          <p>{ selectedPost.body}</p>\r\n        </div>\r\n        <hr/>\r\n        <h3 className=\"uk-margin-remove-top\">Comments:</h3>\r\n          <div className=\"uk-comments\">\r\n            {\r\n              comments.length > 0 ? \r\n              comments.map(comment => {\r\n                return (\r\n                  <Comment\r\n                    key={comment.id}\r\n                    comment={comment} />\r\n                )\r\n              }) :\r\n              <WarningIfNoComment/>\r\n            }\r\n          </div>\r\n          <CommentForm\r\n            comments={comments}\r\n            setComments={setComments}/>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nDetailedPost.propTypes = {\r\n  selectedPost: PropTypes.object\r\n}\r\n\r\nexport default DetailedPost;","import { Router, Route, Switch,  BrowserRouter } from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { getRequest, searchRequest, rangeRequest } from \"./utils/request\";\r\nimport { IdRequest, url }   from './utils/enums';\r\nimport PostPage from './posts/containers/PostPage';\r\nimport AlbumsPage from './albums/containers/AlbumsPage';\r\nimport DetailedPost from './posts/containers/DetailedPost';\r\nimport Context  from './Context';\r\n\r\nfunction WrapperPostPage() {\r\n  const [activePage, setActivePage] = useState(url.urlPosts);\r\n  const [posts, setPosts] = useState([]);\r\n  const [albums, setAlbums] = useState([]);\r\n  const [amountPosts, setAmountPosts] = useState(6);\r\n  const [amountPaginationItems, setAmountPaginationCount] = useState(null);\r\n  const [order, setOrder] = useState('asc');\r\n  const [isViewWithPictures, setIsViewWithPictures] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [linkPost, setLinkPosts] = useState(false);\r\n  const [identifier, setIdentifier] = useState(IdRequest.normal);\r\n  const [likedPosts, setLikedPosts] = useState([]);\r\n  const [selectedPost, setSelectedPost] = useState({});\r\n  const [hiddenElements, setHiddenElements] = useState(false);\r\n  const [timeRequest, setTimeRequest] = useState(false);\r\n  const [range, setRange] = useState(false);\r\n  const [likedAlbums, setLikedAlbums] = useState([]);\r\n  const formValue = useRef();\r\n\r\n  useEffect(() => {\r\n    if (identifier === IdRequest.normal) {\r\n\r\n      getRequest(activePage, currentPage, amountPosts, order)\r\n        .then(response => {\r\n          if (formValue.current) formValue.current.reset();\r\n          setHiddenElements(false);\r\n          activePage === url.urlPosts ? setPosts(response.data) : setAlbums(response.data);\r\n          const newAmountPaginationItems = Math.ceil(response.total / amountPosts);\r\n          setAmountPaginationCount(newAmountPaginationItems);\r\n        })\r\n    }\r\n  }, [amountPosts, order, currentPage, identifier, linkPost, activePage]);\r\n  \r\n  useEffect(() => {\r\n    if (identifier === IdRequest.search)\r\n      \r\n      searchRequest(activePage, formValue.current[0].value, amountPosts, currentPage, order)\r\n        .then(response => {\r\n\r\n          if (response) {\r\n            if (response.data.length === 0) {\r\n              activePage === url.urlPosts ? setPosts(false) : setAlbums(false);\r\n              setTimeRequest(false);\r\n            }\r\n            if (response.data.length > 0) {\r\n              setHiddenElements(false);\r\n              setTimeRequest(false);\r\n              activePage === url.urlPosts ? setPosts(response.data) : setAlbums(response.data);\r\n              const newAmountPaginationItems = Math.ceil(response.total / amountPosts);\r\n              setAmountPaginationCount(newAmountPaginationItems);\r\n            }\r\n          }\r\n        })\r\n  }, [amountPaginationItems, amountPosts, currentPage, order, identifier, timeRequest, activePage]);\r\n  \r\n  useEffect(() => {\r\n    if (identifier === IdRequest.buttonLoadMore && range) {\r\n      setRange(false);\r\n      rangeRequest(activePage, formValue.current[0].value, amountPosts, currentPage, order)\r\n        .then(response => {\r\n          setIdentifier('')\r\n          setTimeRequest(false);\r\n          activePage === url.urlPosts ?\r\n            setPosts([...posts, ...response]) :\r\n            setAlbums([...albums, ...response])\r\n        })\r\n    }\r\n  }, [amountPosts, currentPage, order, identifier, posts, range, activePage, albums]);\r\n\r\n  return (\r\n    {\r\n      posts,\r\n      setPosts,\r\n      albums,\r\n      setAlbums,\r\n      amountPosts,\r\n      setAmountPosts,\r\n      amountPaginationItems,\r\n      setAmountPaginationCount,\r\n      order,\r\n      setOrder,\r\n      isViewWithPictures,\r\n      setIsViewWithPictures,\r\n      currentPage,\r\n      setCurrentPage,\r\n      linkPost,\r\n      setLinkPosts,\r\n      identifier,\r\n      setIdentifier,\r\n      likedPosts,\r\n      setLikedPosts,\r\n      selectedPost,\r\n      setSelectedPost,\r\n      hiddenElements,\r\n      setHiddenElements,\r\n      timeRequest,\r\n      setTimeRequest,\r\n      range,\r\n      setRange,\r\n      activePage,\r\n      setActivePage,\r\n      likedAlbums,\r\n      setLikedAlbums,\r\n      formValue\r\n    }\r\n  )\r\n}\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default function App() {\r\n\r\n  return (\r\n    <Context.Provider value={WrapperPostPage()}>\r\n      <Router history={history}>\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route\r\n              path='/'\r\n              exact\r\n              component={PostPage}\r\n            />\r\n            <Route\r\n              path='/albums'\r\n              component={AlbumsPage}\r\n            />\r\n            <Route\r\n              path='/post/:id'\r\n              component={DetailedPost}\r\n            />\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </Router>            \r\n    </Context.Provider>\r\n  )\r\n}","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from 'react-router-dom';\nimport App from \"./App\";\nimport './style.css';\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <BrowserRouter>\n    <StrictMode>\n      <App />\n    </StrictMode>\n  </BrowserRouter>,\n  rootElement\n);\n"],"sourceRoot":""}